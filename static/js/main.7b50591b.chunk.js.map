{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","userId","user","usersFromServer","find","person","className","href","TodoInfo","todo","title","classNames","TodoList","todos","map","completed","App","useState","todosFromServer","setTodos","setTitle","titleErr","setTitleErr","setUserId","userErr","setUserErr","action","method","onSubmit","event","preventDefault","length","newTodo","array","htmlFor","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b50591b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../../api/users';\n\ntype Props = {\n  userId: number\n};\n\nexport const UserInfo: React.FC<Props> = ({ userId }) => {\n  const user = usersFromServer.find(person => person.id === userId);\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Todo } from '../../type/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, userId, id } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames('TodoInfo', { 'TodoInfo--completed': false })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      <UserInfo userId={userId} />\n    </article>\n  );\n};\n","import { Todo } from '../../type/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n\n  const [title, setTitle] = useState('');\n  const [titleErr, setTitleErr] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [userErr, setUserErr] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title.length === 0) {\n      setTitleErr(true);\n    }\n\n    if (userId === 0) {\n      setUserErr(true);\n    }\n\n    if (title.length > 0 && userId !== 0) {\n      const newTodo = {\n        id: todos.length + 1,\n        title,\n        completed: false,\n        userId,\n      };\n\n      setTodos(array => [\n        ...array,\n        newTodo,\n      ]);\n\n      setTitle('');\n      setUserId(0);\n      setTitleErr(false);\n      setUserErr(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            {'Title: '}\n\n            <input\n              type=\"text\"\n              name=\"tilte\"\n              data-cy=\"titleInput\"\n              value={title}\n              placeholder=\"Enter a title\"\n              onChange={handleTitleChange}\n            />\n          </label>\n\n          {(titleErr && title.length === 0) && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={userId}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n          </label>\n\n          {(userErr && userId === 0) && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}